---
description: 
globs: 
alwaysApply: false
---
# 项目结构规则

## 目录结构
### 后端
```
backend/
├── app/
│   ├── api/          # API路由
│   ├── core/         # 核心配置
│   ├── db/           # 数据库配置
│   ├── models/       # 数据模型
│   ├── schemas/      # Pydantic模型
│   └── services/     # 业务逻辑
├── tests/            # 测试文件
└── main.py           # 入口文件
```

### 前端
```
frontend/
├── src/
│   ├── components/   # 组件
│   ├── pages/        # 页面
│   ├── services/     # API服务
│   └── utils/        # 工具函数
└── package.json      # 项目配置
```

### 其他目录
- data/     # 文件存储
- docs/     # 文档

## 命名规范
### 文件命名
- Python文件：snake_case
- TypeScript文件：camelCase
- React组件：PascalCase
- 样式文件：kebab-case

### 代码命名
- 类名：PascalCase
- 函数名：snake_case
- 变量名：snake_case
- 常量：UPPER_SNAKE_CASE

## 文档要求
### 必需文档
- README.md：项目说明
- API.md：API文档
- CHANGELOG.md：变更日志
- CONTRIBUTING.md：贡献指南

### 文档格式
- 使用Markdown格式
- 使用中文编写
- 包含目录
- 保持更新

## 开发流程
1. 创建功能分支
2. 编写代码和测试
3. 提交代码审查
4. 合并到主分支
5. 部署到测试环境
6. 部署到生产环境


